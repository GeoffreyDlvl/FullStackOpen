{"version":3,"sources":["components/Person.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","person","deletePerson","name","number","onClick","PersonForm","newName","newPhoneNumber","handleNewNameChange","handleNewPhoneNumberChange","addPerson","onSubmit","value","onChange","type","Filter","searchTerms","handleSearchTermsChange","Notification","notification","className","message","baseUrl","axios","get","then","response","data","newPerson","post","id","delete","put","App","useEffect","personsService","persons","setPersons","useState","setNewName","setNewPhoneNumber","setSearchTerms","setNotification","window","confirm","filter","p","personsToShow","toLowerCase","includes","event","target","preventDefault","some","find","updatedPerson","map","setTimeout","catch","error","returedPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73720bc0.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Person = ({ person, deletePerson }) => {\n    return (\n        <div>\n            {person.name} {person.number}\n            <button onClick={() => deletePerson(person)}>\n                delete\n            </button>\n        </div>\n    )\n}\n\nexport default Person","import React from \"react\"\n\nconst PersonForm = ({ newName, newPhoneNumber,\n    handleNewNameChange, handleNewPhoneNumberChange,\n    addPerson }) => (\n    <form onSubmit={addPerson}>\n        <div>\n            name: <input\n                value={newName}\n                onChange={handleNewNameChange} />\n        </div>\n        <div>\n            phone: <input\n                value={newPhoneNumber}\n                onChange={handleNewPhoneNumberChange} />\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n)\n\nexport default PersonForm","import React from \"react\"\n\nconst Filter = ({ searchTerms, handleSearchTermsChange }) => (\n    <div>\n        filter shown with <input\n            value={searchTerms}\n            onChange={handleSearchTermsChange} />\n    </div>\n)\n\nexport default Filter","import React from \"react\";\n\nconst Notification = ({ notification }) => {\n    if (notification === null) {\n        return null\n    }\n\n    return (\n        <div className={notification.type}>\n            {notification.message}\n        </div>\n    )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios\n        .get(baseUrl)\n        .then(response => response.data)\n}\n\nconst create = (newPerson) => {\n    return axios\n        .post(baseUrl, newPerson)\n        .then(response => response.data)\n}\n\nconst destroy = (id) => {\n    return axios\n        .delete(`${baseUrl}/${id}`)\n}\n\nconst update = (id, newPerson) => {\n    return axios\n        .put(`${baseUrl}/${id}`, newPerson)\n        .then(response => response.data)\n}\n\nexport default { getAll, create, destroy, update }","import React, { useEffect, useState } from 'react'\nimport Person from './components/Person'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport personsService from './services/persons'\n\nconst App = () => {\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(persons => setPersons(persons))\n  }, [])\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhoneNumber, setNewPhoneNumber] = useState('')\n  const [searchTerms, setSearchTerms] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const newPerson = {\n      name: newName,\n      number: newPhoneNumber\n    }\n\n    if (persons.some(p => p.name === newName)) {\n      if (window.confirm(`${newName} is already added to phonebook, replace old number with new one?`)) {\n        const person = persons.find(p => p.name === newName)\n        personsService\n          .update(person.id, newPerson)\n          .then(updatedPerson => {\n            setPersons(persons.map(p => p.id !== updatedPerson.id\n              ? p\n              : updatedPerson))\n            setNotification(\n              {\n                message: `Updated ${person.name}`,\n                type: \"success\"\n              })\n            setTimeout(() => {\n              setNotification(null)\n            }, 3000)\n          })\n          .catch(error => {\n            setNotification(\n              {\n                message: `Information of ${person.name} has already been removed from the server`,\n                type: \"error\"\n              })\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n            setPersons(persons.filter(p => p.id !== person.id))\n          })\n      }\n    } else {\n      personsService\n        .create(newPerson)\n        .then(returedPerson => {\n          setPersons(persons.concat(returedPerson))\n          setNewName('')\n          setNewPhoneNumber('')\n          setNotification(\n            {\n              message: `Added ${newPerson.name}`,\n              type: \"success\"\n            })\n          setTimeout(() => {\n            setNotification(null)\n          }, 3000)\n        })\n    }\n  }\n\n  const deletePerson = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personsService\n        .destroy(person.id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== person.id))\n        })\n    }\n  }\n\n  const handleNewNameChange = (event) => setNewName(event.target.value)\n  const handleNewPhoneNumberChange = (event) => setNewPhoneNumber(event.target.value)\n  const handleSearchTermsChange = (event) => setSearchTerms(event.target.value)\n\n\n  const personsToShow = searchTerms === ''\n    ? persons\n    : persons.filter(p => p.name.toLowerCase().includes(searchTerms))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification notification={notification} />\n\n      <Filter\n        searchTerms={searchTerms}\n        handleSearchTermsChange={handleSearchTermsChange}\n      />\n\n      <h3>Add a new</h3>\n\n      <PersonForm\n        newName={newName}\n        newPhoneNumber={newPhoneNumber}\n        handleNewNameChange={handleNewNameChange}\n        handleNewPhoneNumberChange={handleNewPhoneNumberChange}\n        addPerson={addPerson}\n      />\n\n      <h3>Numbers</h3>\n\n      {personsToShow.map(person =>\n        <Person\n          key={person.id}\n          person={person}\n          deletePerson={deletePerson}\n        />\n      )}\n\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}